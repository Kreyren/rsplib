#!/bin/sh
# $Id$
# --------------------------------------------------------------------------
#
#              //===//   //=====   //===//   //       //   //===//
#             //    //  //        //    //  //       //   //    //
#            //===//   //=====   //===//   //       //   //===<<
#           //   \\         //  //        //       //   //    //
#          //     \\  =====//  //        //=====  //   //===//    Version II
#
# ------------- An Efficient RSerPool Prototype Implementation -------------
#
# Copyright (C) 2002-2010 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@iem.uni-due.de
#

### BEGIN INIT INFO
# Provides:          ss
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: RSerPool Scripting Service
# Description:       This service provides the RSerPool Scripting Service.
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
NAME=ss
DESC="RSerPool Scripting Service"
DAEMON=/usr/bin/server

# ====== Scripting Service Options ==========================================
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# EXAMPLE: Use lowest IPv4 address. To use multi-homing, set SS_LOCAL=""!
SS_LOCAL=`env LANG=C ifconfig | grep 'inet addr:' | grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1 }' | sort -u | xargs echo`   # Space-separated list of local addresses
SS_LOCAL=`echo $SS_LOCAL | xargs -n1 2>/dev/null | head -n1`
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

SS_USER="nobody"                                       # User to run scripts
SS_GROUP="nogroup"                                     # Group to run scripts
SS_NICELEVEL=5                                         # Nice level for service
SS_PRs=""                                              # Space-separated list of PRs
SS_CSPSERVER="132.252.152.68"                          # CSP server address
SS_CSPINTERVAL=1000                                    # CSP reporting interval (ms)
SS_POOLHANDLE="ScriptingPool"                          # Pool handle for service
SS_LOGLEVEL=3                                          # Logging verbosity
SS_MISCOPTS=""
# ===========================================================================


# Include scripting service defaults if available
if [ -f /etc/default/ss ] ; then
   . /etc/default/ss
fi

DAEMON_OPTS="-scripting -poolhandle=$SS_POOLHANDLE -daemonpidfile=/var/run/$NAME.pid -logappend=/var/log/$NAME.log -loglevel=$SS_LOGLEVEL -logcolor=on -quiet"
for pr in $PRs ; do
   DAEMON_OPTS="$DAEMON_OPTS -registrar=$pr"
done
if [ "$SS_LOCAL" != "" ] ; then
   DAEMON_OPTS="$DAEMON_OPTS -local="
   i=0
   for a in $SS_LOCAL ; do
      if [ $i -gt 0 ] ; then
         DAEMON_OPTS="$DAEMON_OPTS"","
      fi
      DAEMON_OPTS="$DAEMON_OPTS$a"
      i=1
   done
fi
if [ "$SS_CSPSERVER" != "" ] ; then
   DAEMON_OPTS="$DAEMON_OPTS -cspserver=$SS_CSPSERVER"
fi
if [ "$SS_CSPINTERVAL" != "" ] ; then
   DAEMON_OPTS="$DAEMON_OPTS -cspinterval=$SS_CSPINTERVAL"
fi
DAEMON_OPTS="$DAEMON_OPTS $SS_MISCOPTS"


test -x $DAEMON || exit 0


# ====== SCTP Tuning ========================================================
# Make sure that SCTP is available
modprobe sctp > /dev/null 2>&1
# WARNING: The follow options may make the system unstable!
# sysctl net.sctp.addip_enable=1
# sysctl net.sctp.auth_enable=1
# ===========================================================================


set -e

case "$1" in
    start)
       echo -n "Starting $DESC: "
       touch /var/log/$NAME.log /var/run/$NAME.pid
       chown $SS_USER:$SS_GROUP /var/log/$NAME.log /var/run/$NAME.pid
       start-stop-daemon --start  --pidfile /var/run/$NAME.pid \
                         --chuid $SS_USER:$SS_GROUP --nicelevel $SS_NICELEVEL \
                         --exec $DAEMON -- $DAEMON_OPTS
       echo "$NAME."
     ;;
    stop)
       echo -n "Stopping $DESC: "
       start-stop-daemon --stop --quiet --pidfile /var/run/$NAME.pid \
                         --retry 60 \
                         --exec $DAEMON
       echo "$NAME."
     ;;
    force-reload)
       start-stop-daemon --stop --test --quiet --pidfile \
                         /var/run/$NAME.pid --exec $DAEMON \
       && $0 restart \
       || exit 0
     ;;
    restart)
       $0 stop || true
       $0 start
     ;;
    *)
       N=/etc/init.d/$NAME
       echo "Usage: $N {start|stop|restart|force-reload}" >&2
       exit 1
     ;;
esac

exit 0
