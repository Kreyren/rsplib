#!/bin/bash
#
# Thomas Dreibholz's PlanetLab Script Collection
# Copyright (C) 2005-2006 by Thomas Dreibholz, dreibh@exp-math.uni-essen.de
#
# $Id$
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# Contact: dreibh@iem.uni-due.de
#

if [ $# -lt 5 ] ; then
   echo "Usage: perftest [Prefix] [PEs] [PUs] [ReregInterval] [InterHResTime]" >&2
   exit 1
fi


PREFIX=$1
PEs=$2
PUs=$3
REREGINTERVAL=$4
INTERHRESTIME=$5

HOST_PR="localhost"
HOST_LIST="localhost"

PARAMS=$PREFIX-$PEs-$PUs-$REREGINTERVAL-$INTERHRESTIME


POOLHANDLE="EchoPool"


SSH_USER="dreibh"
SSH_KEY=~/.ssh/id_dsa



startproc ()
{
   PROCNAME=$1
   PROCCALL=$2
   SERVER=$3

   PIDFILE=$PROCNAME-$SERVER.pid
   if [ -e $PIDFILE ]; then
      echo "ERROR: PID file $PIDFILE already exists!"
      exit 1
   fi

   PIDFILE=$PROCNAME-$SERVER.pid
   ssh -t -t -C -i $SSH_KEY -oStrictHostKeyChecking=no -oPasswordAuthentication=no $SSH_USER@$SERVER "\
      cd src/rsplib2/rsplib && $PROCCALL" &
   echo $! >$PIDFILE
}

stopproc ()
{
   PROCNAME=$1
   SERVER=$2

   PIDFILE=$PROCNAME-$SERVER.pid
   if [ -e $PIDFILE ] ; then
      PID=`cat $PIDFILE`
      if ps -p `cat $PIDFILE` | grep ssh 1>/dev/null 2>/dev/null ; then
         echo "Processing $PIDFILE: sending SIGINT to $PID ..."
         kill $PID
         # echo STOP $! -- $PID -- $PIDFILE >$RANDOM-$RANDOM.td0
      else
         echo "Processing $PIDFILE: process is already gone."
         # echo DEAD $! -- $PIDFILE >$RANDOM-$RANDOM.td0
      fi
      rm $PIDFILE
   fi

}

fetchfile ()
{
   SERVER=$1
   INFILE=$2
   OUTFILE=$3
   scp -q -i $SSH_KEY $SSH_USER@$SERVER:"~/src/rsplib2/rsplib/$INFILE" $OUTFILE
}



# ====== Start scenario =====================================================
rm -rf "$PREFIX"
mkdir "$PREFIX"
# ------ Start PR -----------------------------------------------------------
stopproc "TestPR-1" $HOST_PR
startproc "TestPR-1" "./registrar -asap=[::]:9001 -enrp=[::]:9002 -loglevel=3 -statsfile=TestPR-1.data -statsinterval=250" $HOST_PR
sleep 5

# ------ Start PEs ----------------------------------------------------------
i=1 ; while [ $i -le $PEs ] ; do
   stopproc "TestPE-$i" localhost
   startproc "TestPE-$i" "./server -registrar=$HOST_PR:9001 -poolhandle=$POOLHANDLE -echo -policy=RoundRobin" localhost
   let i=$i+1
done

sleep 2

# ------ Start PUs ----------------------------------------------------------
i=1 ; while [ $i -le $PUs ] ; do
   stopproc "TestPU-$i" localhost
   startproc "TestPU-$i" "./hrestest -registrar=$HOST_PR:9001 -poolhandle=$POOLHANDLE -pause=$INTERHRESTIME -quiet -statsfile=TestPU-$i.data -statsinterval=250" localhost
   let i=$i+1
done


# ====== Run tests ==========================================================
sleep 5


# ====== Stop scenario ======================================================

# ------ Stop PUs -----------------------------------------------------------
i=1 ; while [ $i -le $PUs ] ; do
   stopproc "TestPU-$i" localhost
   fetchfile localhost "TestPU-$i.data" "$PREFIX/TestPU-$i.data"
   let i=$i+1
done
sleep 1

# ------ Stop PEs -----------------------------------------------------------
i=1 ; while [ $i -le $PEs ] ; do
   stopproc "TestPE-$i" localhost
   let i=$i+1
done
sleep 2

# ------ Stop PR ------------------------------------------------------------
stopproc "TestPR-1" $HOST_PR


echo "Fertig!"
