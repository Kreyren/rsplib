#!/bin/bash
#
# Thomas Dreibholz's PlanetLab Script Collection
# Copyright (C) 2005-2008 by Thomas Dreibholz, dreibh@exp-math.uni-essen.de
#
# $Id$
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# Contact: dreibh@iem.uni-due.de
#

. ./planetlab-config

MAX_GOOD=999
PUs=15
PEs=6
PRs=1

GET_ALL_MAX_PARALLEL=64



get-hosts ()
{
   GH_OUTPUT=""
   i=0 ; while [ $i -lt $GH_AMOUNT ] ; do
      j=0;
      for host in $goodhosts ; do
         if [ $j -lt $MAX_GOOD ] ; then
            GH_OUTPUT="$GH_OUTPUT $host"
            let i=$i+1
            if [ $i -ge $GH_AMOUNT ]; then
               return
            fi
         fi
         let j=$j+1
      done
   done
}

test-hosts ()
{
   hosts=`echo $IN_HOSTS | xargs -n1 echo | sort -u`
   goodhosts=`echo $hosts | xargs -x ./exectime "./filter-hosts >/dev/null"`

   if [ "x$goodhosts" = "x" ] ; then
      echo "ERROR: No good hosts found!"
      exit 1
   fi

   GH_GOODHOSTS=$goodhosts
   GH_AMOUNT=$PUs
   get-hosts
   OUT_PUs=$GH_OUTPUT

   GH_AMOUNT=$PEs
   get-hosts
   OUT_PEs=$GH_OUTPUT

   GH_AMOUNT=$PRs
   get-hosts
   OUT_PRs=$GH_OUTPUT

   echo "PRs: $OUT_PRs"
   echo "PEs: $OUT_PEs"
   echo "PUs: $OUT_PUs"
   write-hosts
}

write-hosts ()
{
   ( echo $OUT_PUs | xargs -n1 ) >pu-$HOSTSFILEMIDDLE.hosts
   ( echo $OUT_PEs | xargs -n1 ) >pe-$HOSTSFILEMIDDLE.hosts
   ( echo $OUT_PRs | xargs -n1 ) >pr-$HOSTSFILEMIDDLE.hosts
}

get-all-good-hosts ()
{
   echo "# Hosts list created on `date`" >$OUT_HOSTS
   hosts=`echo $IN_HOSTS | xargs -n1 echo | sort -u`
   count=0
   for host in $hosts ; do
      echo "Trying $host ..."
      ./filter-hosts -timeout $SERVER_TEST_TIMEOUT $host >try-$host.tmp &

      let count=$count+1
      if [ $count -ge $GET_ALL_MAX_PARALLEL ] ; then
         echo "Waiting for results ..."
         wait
         count=0
      fi
   done
   echo "Waiting for results ..."
   wait

   for host in $hosts ; do
      result=`cat try-$host.tmp`
      if [ "x$result" != "x" ] ; then
         echo $result >>$OUT_HOSTS
      fi
      #rm -f try-$host.tmp
   done
}



# IN_HOSTS="`grep ".uni-essen.de$" all-planetlab.hosts`"
# HOSTSFILEMIDDLE="essen"
# test-hosts

IN_HOSTS="`grep ".de$" all-planetlab.hosts`"
#  `grep ".at$" all-planetlab.hosts` `grep ".ch$" all-planetlab.hosts` `grep ".fr$" all-planetlab.hosts` `grep ".be$" all-planetlab.hosts` `grep ".nl$" all-planetlab.hosts` `grep ".pl$" all-planetlab.hosts` `grep ".cz$" all-planetlab.hosts` `grep ".dk$" all-planetlab.hosts` `grep ".se$" all-planetlab.hosts` `grep ".fi$" all-planetlab.hosts` `grep ".uk$" all-planetlab.hosts` `grep ".no$" all-planetlab.hosts` `grep ".it$" all-planetlab.hosts` `grep ".es$" all-planetlab.hosts` `grep ".pt$" all-planetlab.hosts`"
HOSTSFILEMIDDLE="europe"
test-hosts

IN_HOSTS="`grep ".edu$" all-planetlab.hosts`"
# "`grep ".berkeley.edu$" all-planetlab.hosts` `grep ".ucla.edu$" all-planetlab.hosts` `grep ".ucsd.edu$" all-planetlab.hosts`"
HOSTSFILEMIDDLE="america"
test-hosts

IN_HOSTS="`grep ".jp$" all-planetlab.hosts` `grep ".cn$" all-planetlab.hosts` `grep ".th$" all-planetlab.hosts` `grep ".sg$" all-planetlab.hosts` `grep ".kr$" all-planetlab.hosts` `grep ".tw$" all-planetlab.hosts` `grep ".in$" all-planetlab.hosts`"
HOSTSFILEMIDDLE="asia"
test-hosts

IN_HOSTS="`grep ".au$" all-planetlab.hosts` `grep ".nz$" all-planetlab.hosts`"
let SERVER_TEST_TIMEOUT=5*$SERVER_TEST_TIMEOUT
HOSTSFILEMIDDLE="australia"
test-hosts

IN_HOSTS="`grep ".cn$" all-planetlab.hosts`"
HOSTSFILEMIDDLE="china"
test-hosts



echo "Testing *all* nodes sequentially. This will take a long time ..."
. ./planetlab-config
IN_HOSTS="`cat all-planetlab.hosts`"     #  | grep ".de$"
OUT_HOSTS=good-planetlab.hosts
let SERVER_TEST_TIMEOUT=10*$SERVER_TEST_TIMEOUT
get-all-good-hosts
