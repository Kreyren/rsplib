#!/bin/bash

# . ./planetlab-config
# SSH_USER=$PLANETLAB_USER
# SSH_KEY=$PLANETLAB_KEY
# SERVICE_DIRECTORY="bin"
# SERVICE_PRE_PROGRAM="sudo"

SSH_USER="dreibh"
SSH_KEY="/home/dreibh/.ssh/test-key"
SERVICE_DIRECTORY="src/rsplib2/rsplib"
SERVICE_PRE_PROGRAM=""
OPT_CSP="-cspserver=127.0.0.1:2960 -cspinterval=1000"

PRNodeList="localhost"
PENodeList="localhost"
PUNodeList="localhost"
AttackerNodeList="localhost"

export Measurement=attack2
export Duration=120
export PRs=1
export PEs=10
export PUs=30
export AttackInterval=1
export Policy="LeastUsed"
export MaxBadPEReports=3
export MaxHRRate=-1
export MaxEURate=-1
export Capacity=1000000
export ReregInterval=30000
export JobInterval=60.0
export JobSize=10000000
export Attackers=1
export AttackType="handleresolution"
export AttackIdentifier=0
export AttackReportUnreachableProbability=1.0



if [ ! -e "$Measurement" ] ; then
   mkdir "$Measurement"
fi
rm -rf "$Measurement/Results"
if [ ! -e "$Measurement/Results" ] ; then
   mkdir "$Measurement/Results"
fi
echo "--resultsdirectory=$Measurement/Results" >$Measurement/summary.input


for Policy in LeastUsed "LeastUsedDegradation:0.1" RoundRobin Random ; do
   for AttackInterval in 0.1 1 10 ; do
      for AttackReportUnreachableProbability in 1.0 ; do

         ID=$Duration-$Policy-$AttackInterval-$AttackReportUnreachableProbability
         VARIABLES="Duration Policy AttackInterval AttackReportUnreachableProbability"
         VALUES="$Duration \"$Policy\" $AttackInterval $AttackReportUnreachableProbability"


         echo ID=$ID
         if [ ! -e "$Measurement/$ID" ] ; then
            mkdir "$Measurement/$ID"
         fi


         cd "$Measurement/$ID"
         if [ ! -e status.txt ] ; then
            ../../attack-scenario2 && touch status.txt
         else
            echo "Skipping $ID -> already complete."
         fi
         cd ../..


         SCALARS="`find $Measurement/$ID -name "*.sca"`"
         for sca in $SCALARS ; do
            echo "--values=\"$VALUES\"" >>$Measurement/summary.input
            echo "--input=$sca" >>$Measurement/summary.input
         done
      done
   done
done


cat $Measurement/summary.input | ../createsummary "$VARIABLES" -batch
