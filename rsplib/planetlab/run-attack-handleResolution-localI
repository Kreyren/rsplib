#!/bin/bash
# ###########################################################################
# Name:        attack-handleResolution-localI
# Description: PU-based attack (localhost measurements)
# Revision:    $Id$
# ###########################################################################


export Measurement=attack-handleResolution-localI
export Duration=900
export PRs=1
export PEs=10
export PUs=30
export AttackInterval=1
export Policy="LeastUsed"
export MaxBadPEReports=3
export Capacity=1000000
export ReregInterval=30000
export JobInterval=60.0
export JobSize=10000000
export Attackers=1
export AttackType="handleresolution"
export AttackIdentifier=0
export AttackReportUnreachableProbability=1.0


if [ ! -e "$Measurement" ] ; then
   mkdir "$Measurement"
fi
rm -rf "$Measurement/Results"
if [ ! -e "$Measurement/Results" ] ; then
   mkdir "$Measurement/Results"
fi
echo "--resultsdirectory=$Measurement/Results" >$Measurement/summary.input


for Policy in LeastUsed "LeastUsedDegradation:0.1" RoundRobin Random ; do
   for AttackInterval in 0.1 1 3 5 7.5 10 ; do
      for AttackReportUnreachableProbability in 0.0 1.0 ; do

         ID=$Duration-$Policy-$AttackInterval-$AttackReportUnreachableProbability
         VARIABLES="Duration Policy Capacity JobSize JobInterval AttackInterval AttackReportUnreachableProbability"
         VALUES="$Duration \"$Policy\" $Capacity $JobSize $JobInterval $AttackInterval $AttackReportUnreachableProbability"


         echo ID=$ID
         if [ ! -e "$Measurement/$ID" ] ; then
            mkdir "$Measurement/$ID"
         fi


         cd "$Measurement/$ID"
         if [ ! -e status.txt ] ; then
            ../../attack-scenario1 && touch status.txt
         else
            echo "Skipping $ID -> already complete."
         fi
         cd ../..


         SCALARS="`find $Measurement/$ID -name "*.sca"`"
         for sca in $SCALARS ; do
            echo "--values=\"$VALUES\"" >>$Measurement/summary.input
            echo "--input=$sca" >>$Measurement/summary.input
         done
      done
   done
done


cat $Measurement/summary.input | ../createsummary "$VARIABLES" -batch
