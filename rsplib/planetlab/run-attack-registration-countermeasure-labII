#!/bin/bash
# ###########################################################################
# Name:        attack-registration-countermeasure-labII
# Description: PE-based attack countermeasure (lab measurements)
# Revision:    $Id$
# ###########################################################################

# . ./planetlab-config
# export SSH_USER=$PLANETLAB_USER
# export SSH_KEY=$PLANETLAB_KEY
# export SERVICE_DIRECTORY="bin"
# export SERVICE_PRE_PROGRAM="sudo"

export SSH_USER="network"
export SSH_KEY="/home/network/.ssh/id_dsa"
export SERVICE_DIRECTORY="src/rsplib2/rsplib"
export SERVICE_PRE_PROGRAM=""
export OPT_CSP="-cspserver=210.37.47.66:2960 -cspinterval=1000"

export PRNodeList="210.37.47.66"
export PENodeList="210.37.47.61 210.37.47.73"
export PUNodeList="210.37.47.74 210.37.47.78 210.37.47.87"
export AttackerNodeList="210.37.47.67"

export Measurement=attack-registration-countermeasure-labII
export Duration=900
export PRs=1
export PEs=10
export PUs=30
export AttackInterval=1
export Policy="LeastUsed"
export MaxBadPEReports=3
export MaxHRRate=-1
export MaxEURate=-1
export Capacity=1000000
export ReregInterval=30000
export JobInterval=60.0
export JobSize=10000000
export Attackers=1
export AttackType="registration"
export AttackIdentifier=12345678   # !!! Fixed IDs !!!
export AttackReportUnreachableProbability=0.0


if [ ! -e "$Measurement" ] ; then
   mkdir "$Measurement"
fi
rm -rf "$Measurement/Results"
if [ ! -e "$Measurement/Results" ] ; then
   mkdir "$Measurement/Results"
fi
echo "--resultsdirectory=$Measurement/Results" >$Measurement/summary.input


for Policy in LeastUsed "LeastUsedDegradation:0.1" RoundRobin Random ; do
   for AttackInterval in 0.1 ; do
      for Attackers in 1 3 5 7 10 ; do

         ID=$Duration-$Policy-$AttackInterval-$Attackers
         VARIABLES="Duration Policy Capacity JobSize JobInterval AttackInterval Attackers"
         VALUES="$Duration \"$Policy\" $Capacity $JobSize $JobInterval $AttackInterval $Attackers"


         echo ID=$ID
         if [ ! -e "$Measurement/$ID" ] ; then
            mkdir "$Measurement/$ID"
         fi


         cd "$Measurement/$ID"
         if [ ! -e status.txt ] ; then
            ../../attack-scenario2 && touch status.txt
         else
            echo "Skipping $ID -> already complete."
         fi
         cd ../..


         SCALARS="`find $Measurement/$ID -name "*.sca"`"
         for sca in $SCALARS ; do
            echo "--values=\"$VALUES\"" >>$Measurement/summary.input
            echo "--input=$sca" >>$Measurement/summary.input
         done
      done
   done
done


cat $Measurement/summary.input | ../createsummary "$VARIABLES" -batch
