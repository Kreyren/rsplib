.\" $Id$
.\" --------------------------------------------------------------------------
.\"
.\"              //===//   //=====   //===//   //       //   //===//
.\"             //    //  //        //    //  //       //   //    //
.\"            //===//   //=====   //===//   //       //   //===<<
.\"           //   \\         //  //        //       //   //    //
.\"          //     \\  =====//  //        //=====  //   //===//    Version II
.\"
.\" ------------- An Efficient RSerPool Prototype Implementation -------------
.\"
.\" Copyright (C) 2002-2007 by Thomas Dreibholz
.\"
.\" This program is free software: you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation, either version 3 of the License, or
.\" (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.\"
.\" Contact: dreibh@iem.uni-due.de
.\"
.\" ###### Setup ############################################################
.Dd September, 2007
.Dt Server 8
.Os RSerPool Server
.\" ###### Name #############################################################
.Sh NAME
.Nm server
.Nd RSerPool Server (PE) for multiple example services
.\" ###### Synopsis #########################################################
.Sh SYNOPSIS
.Nm server
.Op Fl quiet
.Op Fl identifier=PE_identifier
.Op Fl poolhandle=pool_handle
.Op Fl registrar=address:port
.Op Fl asapannounce=address:port
.Op Fl rereginterval=milliseconds
.Op Fl policy=policy
.Op Fl runtime=milliseconds
.Nm server
.Op Fl echo
.Nm server
.Op Fl discard
.Nm server
.Op Fl daytime
.Nm server
.Op Fl chargen
.Op Fl chargenmaxthreads=threads
.Nm server
.Op Fl calcapp
.Op Fl capvector=vector_file
.Op Fl capscalar=scalae_file
.Op Fl capmaxjobs=max_jobs
.Op Fl capkeepalivetransmissioninterval=microseconds
.Op Fl capkeepalivetimeoutinterval=microseconds
.Op Fl capcookiemaxtime=microseconds
.Op Fl capcookiemaxcalculations=calculations
.Nm server
.Op Fl pingpong
.Op Fl pppmaxthreads=threads
.Op Fl pppfailureafter=messages
.Nm server
.Op Fl fractal
.Op Fl fgpmaxthreads=threads
.Op Fl fgpfailureafter=messages
.Op Fl fgptransmittimeout=milliseconds
.Op Fl fgpcookiemaxtime=milliseconds
.Op Fl fgpcookiemaxpackets=messages
.Op Fl fgptestmode
.Nm server
.Op Fl scripting
.Op Fl ssmaxthreads=threads
.Op Fl sskeeptempdirs=directory
.Op Fl sstransmittimeout=milliseconds
.\" ###### Description ######################################################
.Sh DESCRIPTION
.Nm server
is an example Reliable Server Pooling (RSerPool) pool element (PE)
that provides multiple services. Upon startup, one service has to be selected
by the command-line parameters. To start multiple services, run multiple
instances.
.Nm server
provides the following services:
.Bl -tag -width indent
.It Echo
Echoing back incoming data.
.It Discard
Discarding incoming data.
.It Daytime
Sending back current time of day.
.It CharGen
Sending as much character data as possible.
.It CalcApp
Calculation application model for performance tests. See
http://duepublico.uni-duisburg-essen.de/servlets/DerivateServlet/Derivate-16326/Dre2006-final.pdf
for more information.
.It PingPong
Simple request-response example using cookies for failover.
.br
.It Fractal
Fractal generator with cookie-based failover.
.br
.It Scripting
Remote execution of scripts with upload/download of input/output data. Could
for example be used for distributing simulation runs. Take care of security
when using this service!
.El
.Pp
.\" ###### Arguments ########################################################
.Sh ARGUMENTS
The following options are available:
.Bl -tag -width indent
.\" ====== Common parameters ================================================
.It Common Pool Element Parameters:
.Bl -tag -width indent
.It Fl quiet
Do not print startup and shutdown messages.
.It Fl identifier=PE_identifier
Sets a fixed PE identifier. Handle with care!
.It Fl poolhandle=pool_handle
Sets the PH to a non-default value; otherwise, the default setting is the
service-specific default.
.It Fl registrar=address:port
Adds a static PR entry into the Registrar Table.
It is possible to add multiple entries.
.It Fl asapannounce=address:port
Sets the multicast address and port the ASAP instance
listens for ASAP Server Announces on.
.It Fl rereginterval=milliseconds
Sets the PE's re-registration interval.
.It Fl policy=RoundRobin|Random|WeightedRandom:weight|LeastUsed|LeastUsedDegradation:degradation|PriorityLeastUsed:increment|...
Sets the pool policy and its parameters.
.It Fl runtime=seconds
After the configured number of seconds, the service is shut down.
.El
.\" ====== Logging ==========================================================
.It Logging Parameters:
.Bl -tag -width indent
.It Fl loglevel=0-9
Sets the logging verbosity from 0 (none) to 9 (very verbose).
It is recommended to use at least a value of 2 to see possibly
important error messages and warnings.
.It Fl logcolor=on|off
Turns ANSI colorization of the logging output on or off.
.It Fl logfile=filename
Write logging output to a file (default is stdout); given file will be overwritten.
.It Fl logappend=filename
Write logging output to a file (default is stdout); output will be appended to given file.
.El
.\" ====== Component Status Protocol ========================================
.It Component Status Protocol (CSP) Parameters:
.Bl -tag -width indent
.It Fl cspserver=address:port
Sets the address of a CSP monitor server. By default, the content of the
environment variable CSP_SERVER is used. If not defined, no CSP status reports
will be sent.
.It Fl cspinterval=milliseconds
Sets the interval for the CSP status updates in milliseconds. By default, the
content of the environment variable CSP_INTERVAL is used. If not defined, no
CSP status reports will be sent.
.El
.\" ====== Services =========================================================
.It Service Parameters:
.Bl -tag -width indent
.\" ====== Echo =============================================================
.It Fl echo
Starts the Echo service.
.\" ====== Discard ==========================================================
.It Fl discard
Starts the Discard service.
.\" ====== Daytime ==========================================================
.It Fl daytime
Starts the Daytime service.
.\" ====== CharGen ==========================================================
.It Fl chargen
Starts the CharGen service.
.Bl -tag -width indent
.It Fl chargenmaxthreads=threads
Sets an upper limit for the number of simultaneous CharGen sessions.
.El
.\" ====== CalcApp ==========================================================
.It Fl calcapp
Starts the CalcApp service.
.Bl -tag -width indent
.It Fl capcapacity=calculations_per_second
Sets the service capacity in calculations per second.
.It Fl capobject=name
Sets the object name for scalar hierarchy.
.It Fl capscalar=scalar_file
Sets the name of vector scalar file.
.It Fl capvector=vector_file
Sets the name of vector output file.
.It Fl capmaxjobs=max_jobs
Sets the an upper limit for the number of simultaneous CalcApp requests.
.It Fl capkeepalivetransmissioninterval=microseconds
Sets the keep-alive transmission interval in microseconds.
.It Fl capkeepalivetimeoutinterval=microseconds
Sets the keep-alive timeout in microseconds.
.It Fl capcookiemaxtime=microseconds
Sets the cookie interval in microseconds.
.It Fl capcookiemaxcalculations=calculations
Sets the cookie interval in calculations.
.El
.\" ====== PingPong =========================================================
.It Fl pingpong
Starts the PingPong service.
.Bl -tag -width indent
.It Fl pppmaxthreads=threads
Sets an upper limit for the number of simultaneous PingPong sessions.
.It Fl pppfailureafter=messages
After the set number of messages, the server will terminate the connection in
order to test failovers.
.El
.\" ====== Fractal ==========================================================
.It Fl fractal
Starts the Fractal Generator service.
.Bl -tag -width indent
.It Fl fgpmaxthreads=threads
Sets an upper limit for the number of simultaneous Fractal Generator sessions.
.It Fl fgpfailureafter=messages
After the set number of data packets, the server will terminate the connection
in order to test failovers.
.It Fl fgptransmittimeout=milliseconds
Sets transmit timeout in milliseconds.
.It Fl fgpcookiemaxtime=milliseconds
Send cookie after given number of milliseconds.
.It Fl fgpcookiemaxpackets=messages
Send cookie after given number of Data messages
.It Fl fgptestmode
Generate simple test pattern instead of calculating a fractal
graphics (useful to conserve CPU power when debugging).
.El
.Pp
.\" ====== Scripting ========================================================
.It Fl scripting
Starts the Scripting service.
.Bl -tag -width indent
.It Fl ssmaxthreads=threads
Sets an upper limit for the number of simultaneous sessions.
.It Fl sskeeptempdirs=directory
.It Fl sstransmittimeout=milliseconds
.El
.El
.El
.\" ###### Environment ######################################################
.Sh ENVIRONMENT
.Nm server
uses the environment variables CSP_SERVER and CSP_INTERVAL to define a CSP
server to send reports to in the specified interval.
.\" ###### Diagnostics ######################################################
.Sh DIAGNOSTICS
If loglevel>0, log messages will be printed to stdout or into a specified
log file.
.\" ###### See also #########################################################
.Sh SEE ALSO
For a detailed introduction to RSerPool, see:
.br
http://duepublico.uni-duisburg-essen.de/servlets/DerivateServlet/Derivate-16326/Dre2006-final.pdf
.Pp
Thomas Dreibholz's RSerPool Page:
.br
http://tdrwww.exp-math.uni-essen.de/dreibholz/rserpool/
.\" ###### Authors ##########################################################
.Sh AUTHORS
Dr. Thomas Dreibholz
.br
http://tdrwww.exp-math.uni-essen.de/dreibholz/rserpool/
.br
mailto://dreibh@iem.uni-due.de
.br
