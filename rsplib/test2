#!/bin/bash

. ./planetlab-config

TESTID=messung2

PR_AUSTRALIA=`cat pr-australia.hosts`
PR_ASIA=`cat pr-asia.hosts`
PR_AMERICA=`cat pr-usa.hosts`
PR_EUROPE=`cat pr-europe.hosts`
PR_MISCOPT="-loglevel=3"

PE_AUSTRALIA=`cat pe-australia.hosts`
PE_ASIA=`cat pe-asia.hosts`
PE_AMERICA=`cat pe-usa.hosts`
PE_EUROPE=`cat pe-europe.hosts`
PE_MISCOPT="-calcapp -rereginterval=3333 -policy=LeastUsed -capmaxjobs=10 -loglevel=3 "

PU_AUSTRALIA=`cat pu-australia.hosts`
PU_ASIA=`cat pu-asia.hosts`
PU_AMERICA=`cat pu-usa.hosts`
PU_EUROPE=`cat pu-europe.hosts`
PU_MISCOPT="-jobinterval=60.0 -jobsize=1000000 -loglevel=6"

MULTIPLIKATOR=1


# ---------------------------
puAustralia=$PU_AUSTRALIA
puAsia=$PU_ASIA
puAmerica=$PU_AMERICA
puEurope=$PU_EUROPE
peAustralia=$PE_AUSTRALIA
peAsia=$PE_ASIA
peAmerica=$PE_AMERICA
peEurope=$PE_EUROPE
i=1 ; while [ $i -lt $MULTIPLIKATOR ] ; do
   PU_AUSTRALIA="$PU_AUSTRALIA $puAustralia"
   PU_ASIA="$PU_ASIA $puAsia"
   PU_AMERICA="$PU_AMERICA $puAmerica"
   PU_EUROPE="$PU_EUROPE $puEurope"
   PE_AUSTRALIA="$PE_AUSTRALIA $peAustralia"
   PE_ASIA="$PE_ASIA $peAsia"
   PE_AMERICA="$PE_AMERICA $peAmerica"
   PE_EUROPE="$PE_EUROPE $peEurope"
   let i=$i+1
done
# ---------------------------


PR_ALL="$PR_AUSTRALIA $PR_ASIA $PR_AMERICA $PR_EUROPE"
PE_ALL="$PE_AUSTRALIA $PE_ASIA $PE_AMERICA $PE_EUROPE"
PU_ALL="$PU_AUSTRALIA $PU_ASIA $PU_AMERICA $PU_EUROPU"



resetAll ()
{
   ./stop-processes Registrar
   ./stop-processes PoolElement
   ./stop-processes PoolUser
}

startNetwork ()
{
   echo "PRs=$localPRs"
   echo "PEs=$localPEs"

   optPeers=""
   for peer in $PR_ALL ; do
      optPeers="$optPeers -peer=$peer:3864"
   done
   number=1
   for pr in $localPRs ; do
      echo "Starting PR on $pr ..."
      ./start-process "Registrar-$number" "./rootshell -c \"./registrar $PR_MISCOPT -asap=0.0.0.0:3863 -enrp=0.0.0.0:3864 $optPeers $OPT_CSP\" >$TESTID-pr$number-$pr.log 2>&1" $pr &
      let number=$number+1
   done

   optRegistrars=""
   for pr in $localPRs ; do
      optRegistrars="$optRegistrars -registrar=$pr:3863"
   done
   number=1
   for pe in $localPEs ; do
      echo "Starting PE on $pe ..."
      ./start-process "PoolElement-$number" "./rootshell -c \"./server $PE_MISCOPT $optRegistrars -capvector=$TESTID-pe$number-$pe.vec -capscalar=$TESTID-pe$number-$pe.sca -capobject=PE-$number-$pe $OPT_CSP\" >$TESTID-pe$number-$pe.log 2>&1" $pe &
      let number=$number+1
   done

   sleep 90

   number=1
   for pu in $localPUs ; do
      echo "Starting PU on $pu ..."
      ./start-process "PoolUser-$number" "./rootshell -c \"./calcappclient $PU_MISCOPT $optRegistrars -vector=$TESTID-pu$number-$pu.vec -scalar=$TESTID-pu$number-$pu.sca -object=PU-$number-$pu $OPT_CSP\" >$TESTID-pu$number-$pu.log 2>&1" $pu &
      let number=$number+1
   done
}

stopNetwork ()
{
   number=1
   for pu in $localPUs ; do
      ./stop-process "PoolUser-$number" $pu
      let number=$number+1
   done
   number=1
   for pe in $localPEs ; do
      ./stop-process "PoolElement-$number" $pe
      let number=$number+1
   done
   number=1
   for pr in $localPRs ; do
      ./stop-process "Registrar-$number" $pr
      let number=$number+1
   done
}



startNetworkAustralia ()
{
   localPRs=$PR_AUSTRALIA
   localPEs=$PE_AUSTRALIA
   localPUs=$PU_AUSTRALIA
   startNetwork
}

startNetworkAsia ()
{
   localPRs=$PR_ASIA
   localPEs=$PE_ASIA
   localPUs=$PU_ASIA
   startNetwork
}

startNetworkAmerica ()
{
   localPRs=$PR_AMERICA
   localPEs=$PE_AMERICA
   localPUs=$PU_AMERICA
   startNetwork
}

startNetworkEurope ()
{
   localPRs=$PR_EUROPE
   localPEs=$PE_EUROPE
   localPUs=$PU_EUROPE
   startNetwork
}


stopNetworkAustralia ()
{
   localPRs=$PR_AUSTRALIA
   localPEs=$PE_AUSTRALIA
   localPUs=$PU_AUSTRALIA
   stopNetwork
}

stopNetworkAsia ()
{
   localPRs=$PR_ASIA
   localPEs=$PE_ASIA
   localPUs=$PU_ASIA
   stopNetwork
}

stopNetworkAmerica ()
{
   localPRs=$PR_AMERICA
   localPEs=$PE_AMERICA
   localPUs=$PU_AMERICA
   stopNetwork
}

stopNetworkEurope ()
{
   localPRs=$PR_EUROPE
   localPEs=$PE_EUROPE
   localPUs=$PU_EUROPE
   stopNetwork
}


if [ $# -lt 1 ] ; then
   echo "Usage: fractal-scenario1 [start|stop|reset] {all|europe|australia|asia|america}"
fi

if [ "x$1" = "xstart" ] ; then
   if [ $# -eq 2 -a "x$2" = "xaustralia" ] ; then
      echo "Starting components in Australia"
      startNetworkAustralia
   elif [ $# -eq 2 -a "x$2" = "xasia" ] ; then
      echo "Starting components in Asia"
      startNetworkAsia
   elif [ $# -eq 2 -a "x$2" = "xeurope" ] ; then
      echo "Starting components in Europe"
      startNetworkEurope
   elif [ $# -eq 2 -a "x$2" = "xamerica" ] ; then
      echo "Starting components in America"
      startNetworkAmerica
   elif [ $# -eq 2 -a "x$2" = "xall" ] ; then
      echo "Starting components worldwide"
      # startNetworkAustralia
      startNetworkAsia
      startNetworkAmerica
      startNetworkEurope
   else
      echo "Usage: fractal-scenario1 start [all|europe|australia|asia|america]"
   fi
elif [ "x$1" = "xstop" ] ; then
   if [ $# -eq 2 -a "x$2" = "xaustralia" ] ; then
      echo "Stopping components in Australia"
      stopNetworkAustralia
   elif [ $# -eq 2 -a "x$2" = "xasia" ] ; then
      echo "Stopping components in Asia"
      stopNetworkAsia
   elif [ $# -eq 2 -a "x$2" = "xeurope" ] ; then
      echo "Stopping components in Europe"
      stopNetworkEurope
   elif [ $# -eq 2 -a "x$2" = "xamerica" ] ; then
      echo "Stopping components in America"
      stopNetworkAmerica
   elif [ $# -eq 2 -a "x$2" = "xall" ] ; then
      echo "Stopping components worldwide"
      # stopNetworkAustralia
      stopNetworkAsia
      stopNetworkAmerica
      stopNetworkEurope
   else
      echo "Usage: fractal-scenario1 stop [all|europe|australia|asia|america]"
   fi
elif [ "x$1" = "xreset" ] ; then
   echo "Resetting everything!"
   resetAll
elif [ "x$1" = "xresults" ] ; then
   echo "Fetching results!"
   echo $PU_ALL $PE_ALL $PR_ALL | sort -u | xargs ./get-results $TESTID
   ./combine-vectors $TESTID
else
   echo "ERROR: Bad parameter!"
fi
